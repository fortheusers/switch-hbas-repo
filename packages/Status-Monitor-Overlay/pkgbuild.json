{
    "package": "Status-Monitor-Overlay",
    "info": {
        "title": "Status-Monitor-Overlay",
        "author": "masagrator",
        "category": "advanced",
        "version": "1.2.2",
        "url": "https://github.com/masagrator/Status-Monitor-Overlay/releases",
        "license": "GPLv2",
        "description": "Monitor many stats of Nintendo Switch hardware",
        "details": "Monitor Your hardware in real time!\\n\\nThis is an overlay homebrew dedicated to Nintendo Switch. You need to have installed Tesla environment to use it.\\n\\nTool contains three modes to choose, each one is explained here : https://github.com/masagrator/Status-Monitor-Overlay/blob/master/docs/modes.md\\n\\nYou can exit from selected mode by pressing and holding Left Stick + Right Stick. To exit from main menu press B.\\n\\nIf it's not working in dock, you need to first start Status Monitor, then put Nintendo Switch to dock.\\n\\nWhat is currently supported:\\n\\nCPU Usage for each core (Cores #0-#2 are used by apps/games, Core #3 is used by OS, background processes and also Tesla overlays)\\nGPU Load\\nCPU, GPU & RAM actual frequency\\nUsed RAM categorized to: (not supported by FWs <5.0.0)\\nTotal\\nApplication\\nApplet\\nSystem\\nSystem Unsafe\\nSoC, PCB & Skin temperatures (Skin temperature not supported by FWs <5.0.0)\\nFan Rotation Level\\nPFPS and FPS (with help of NX-FPS, more info in repo. Not installing it results in not showing FPS counters on overlay)\\nPlanned:\\nAdd Graph mode\\n\\nRequirements:\\n\\nFrom 0.4.1 you need Tesla Menu >=1.0.2\\n\\nThanks to:\\n\\nRetroNX channel for helping with coding stuff\\nSunTheCourier for sys-clk-Overlay from which I learned how to make my own Tesla homebrew\\nHerbaciarz for providing screenshots from HDMI Grabber\\nFAQ:\\nQ: This homebrew has any impact on games?\\n\\nA: Negligible, you won't see any difference. Almost everything is done on Core #3, other cores usage is below 0.001%.\\n\\nTroubleshooting:\\nQ: Game sometimes hangs when using Status Monitor Overlay. Why?\\n\\nA: This is because of dmnt:cht nature. Some games don't like that it's peaking constantly at its memory and they stuck. This happens only if you are using NX-FPS plugin. Solution is to just close Status Monitor Overlay (you don't need to close Tesla Menu) and wait few seconds until game will resume."
    },
    "changelog": "v1.2.2\\n- Round FPS Average to PFPS if difference is in range +/- 0.25 (you can turn off rounding in config file), thanks to this we can minimize changes in FPS Average where some games are under constant changes while they provide in fact locked 60 FPS. For best results utilize always newest SaltyNX!\\n  - This wasn't utilized before because PFPS reading was too unstable so current solution would not work. In SaltyNX 1.4.0 was introduced a better way to measure PFPS without cheating which gives now much stable results for referencing.\\n- Change optimization level from -O2 to -O3 for better performance at cost of slighly bigger overlay\\n\\nv1.2.1\\n- Fix an issue with FPS Graph incorrectly detecting when game is paused, causing random pausing for a short moment (Requires SaltyNX 1.4.6+)\\n\\nv1.2.0\\n- Redesign game informations in Full mode to match stylistically with hardware informations\\n- Add information about game read speed in Full and Mini modes (for Mini mode you must add \"READ\" value to \"show\" key, more in docs and config template). Requires SaltyNX 1.4.0+ to work properly.\\n- Fix FPS Graph not showing properly max FPS value if display refresh rate is 100 Hz or higher\\n- Redesign sleep logic so now overlay has snappier reaction time\\n\\nShadow update 31.07.2025 17:45 GMT: Fixed threads related to reading CPU usage, it didn't apply proper logic to exit them immediately when requested which could slow down moving between different modes.\\n\\n1.1.9\\nFix an issue with FPS Graph not pausing when game doesn't push new frames\\n\\n1.1.8\\nAdd support for SaltyNX 1.2.1+\\nNow it can read viewport resolutions from EGL and Vulkan games\\nAdded font cache to lower impact on games performance (you can disable it in config.ini with key font_cache but it's not advised)\\nWhen there is only one resolution available to read, Full and Mini mode will print just one resolution instead of second being \"0x0\"\\nAlso figured out an issue that was bothering some people and that cannot be fixed:\\nSometimes I got reports that Status Monitor freezes when trying to open it, or Album freezes with Status Monitor already opened...\\nThat issue comes from having too much apps + sysmodules running that try to access sdcard.\\n\\nYou can disable SaltyNX logging with SaltyNX-Tool to have at least one session more available. If even disabling it doesn't help, consider removing sysmodules or killing them with Sysmodules overlay when not using them.\\n\\n1.1.7a\\n\\nAdd support for SaltyNX 1.2.0+ (older versions are now unsupported when it comes to using FPS Graph)\\nFix reading config issue for Mini mode #88\\n\\n1.1.6\\n\\nSmall code refactor which resulted in slightly smaller size\\nSupport SaltyNX 1.0.3+ display refresh rate update logic in FPS Graph to fix issue with graph randomly not adjusting height to refresh rate (if there is older SaltyNX used, overlay will use old logic)\\n\\n1.1.4\\n\\nFix issue with overlay potentially crashing system on overlay's boot related to nv services\\nFix potential issue with sleep mode at 19.0.0+ that was first discovered in sys-clk retronx-team/sys-clk#85\\nFor some reason using tsSessionGetTemperature is enough to crash system while is in sleep mode\\nIt was fixed by moving from ts service to i2c. Readings are not filtered, so reading output and behavior can be slightly different than what we were used to.\\n\\n1.1.3\\n\\nSwitch reading fan rotation level from \"fan\" service to \"pwm\" service\\nThis allows avoiding potential conflict with other homebrew/sysmodules (f.e. Nx-FanControl) because only one process can have fan controller session in \"fan\" service.\\n\\n1.1.2\\n\\nFix Resolutions sometimes going out of bounds in Full Mode\\nUpdate SaltyNX to 0.9.2+ for better compatibility with games using Id Tech engines and Creation Engine\\n\\n1.1.1\\n\\nAdded options to show 2 the best candidates for game's internal resolution in Mini and Full modes.\\nAdded keys to config that can disable showing FPS and Resolutions in Full mode\\nAdded value RES to show key in Mini mode that shows Resolutions.\\nUpdate SaltyNX to 0.9.1+ for better compatibility with games using Id Tech engines",
    "assets": [
        {
            "url": "https://github.com/masagrator/Status-Monitor-Overlay/releases/download/1.2.2/Status-Monitor-Overlay.zip",
            "type": "zip",
            "zip": [
                {
                    "path": "/**/*",
                    "dest": "/",
                    "type": "update"
                }
            ]
        }
    ]
}