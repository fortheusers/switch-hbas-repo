{
    "package": "UltrahandOverlay",
    "info": {
        "title": "Ultrahand Overlay",
        "author": "ppkantorski",
        "category": "tool",
        "version": "1.9.10",
        "url": "https://github.com/ppkantorski/Ultrahand-Overlay",
        "license": "GPLv2",
        "description": "The fully craft-able overlay executor.",
        "details": "WARNING: This will overwrite Tesla Menu if already installed. Includes ppkantorski's nx-ovlloader fork. \\n\\nUltrahand Overlay is a Tesla Menu replacement built from the ground up off of libtesla that provides powerful C/C++ commands through the usage of its own custom interpretive programming language (similar to Shell/BASH). It is a versatile tool that enables you to create and share custom command-based packages, providing enhanced functionality for managing files and directories on your SD card.\\n\\nWith Ultrahand, you have the flexibility to customize and shape your file management system according to your needs, empowering you with greater control over your system configurations."
    },
    "changelog": "v1.9.10\\nQuick patch: (stability update)\\n\\nList of changes:\\n1. Restoration of the ScriptOverlay (minus on a command).\\n    - There was a lingering issue within the List class that was causing mis-handlings of the cached items for certain menus upon return.\\n        - This issue should be resolved now.\\n2. Potential memory leak bug fix for aborted unzip/download commands.\\n3. Smoother text scrolling (for list items with long text).\\n4. Slightly improved color sampling for the cursor blink effect.\\n5. Slight optimizations to the handleRunningInterpreter input handler.\\n6. Removal of unused variable declarations in the MainMenu class.\\n7. Slight alignment corrections to the table background.\\n\\nv1.9.9\\nList of changes:\\n1. More widget options have been added to the settings menu.\\n    - New toggle for disabling dynamic temperature colors.\\n    - New toggle for forcing center text alignment (on by default).\\n        - When off, text alignment will be set to the right (like before v1.9.8).\\n    - New toggle for extended backdrop (off by default).\\n        - This is an alternative style choice to the backdrop that some users may prefer.\\n    - Widget menu has also now been broken up into \"Widget Items\" and \"Widget Settings\".\\n    - Widget positioning and alignments have also been corrected.\\n2. Important navigational bug fixes (memory leak fixes).\\n    - Page swapping (including rapid page swapping), list deconstruction, and management of list item cache have been significantly cleaned up to prevent crashes.\\n    - These changes should prevent lingering navigational memory related issues from randomly occurring.\\n3. New theme color configurations.\\n    - temperature_color: color for temperatures on the widget with dynamic colors disabled.\\n    - battery_charging_color: color for the power indicator on the widget with the battery charging.\\n    - battery_low_color: color for the power indicator on the widget when battery is below 20%.\\n    - Propagation of version_text_color to apply to overlay and package versions on the menu (in addition to the Ultrahand / nx-ovlloader version displayed below the logo).\\n4. Improved dynamic logo with higher resolution color sampling (smoother gradient color progression).\\n5. New alpha fix for screenshots taken with Opaque Screenshots set to off.\\n    - This sets the alpha for certain elements to 14, others to 15 to make screenshots with transparency look more accurate.\\n6. Slight changes to default theme.\\n    - Table background has been reset to a darker shade of gray.\\n    - Side-note:- Default theme must be re-applied for changes to occur.\\n7. Various alignment corrections and bug fixes.\\n\\nNotice:- Next version is currently planned to be v1.9.10, so don't get your hopes up for v2.0.0 quite yet. 😁\\n\\nv1.9.8\\nList of changes:\\n\\n- Important bug fix for pchtxt2ips conversion not properly naming the ips files.\\n- This issue came up because of the NO_FSTREAM directive change in v1.9.7 (was not properly handled).\\n- Side-note: Conversion of pchtxt's in v1.9.7 is bugged so v1.9.8 is recommended (for usage with Mod Alchemist).\\n- Various UI improvements to the widget.\\n- Widget text are now centered instead of aligned to the right.\\n- New widget backdrop implementation for highlighting the widget region with a uniform rounded rectangle (on by default).\\n- This makes the widget easier to see with certain wallpapers, or transparencies.\\n- Located in UI Settings > Widget.\\n- New theme color settings widget_backdrop_color and widget_backdrop_alpha.\\n- The default theme has some new color changes.\\n- For changes to be applied, users must re-apply the default theme in the settings menu.\\n- There are also a couple minor changes in ultra.ini.\\n- Screenshot opacity implementation has been cleaned up.\\n- Longer opacity delay as well as cleaner click and release state handling.\\n- Shake highlight implementation bug fixes and top / bottom of list triggering.\\n- Clicking left on the overlay page or right on the packages page now triggers the shake highlight effect (like before v1.9.7).\\n- Holding down / up and hitting the last / first item will now triggers a shake highlight in the direction you are traversing from (new).\\n- Rendering methods have been optimized again (very slightly faster than v1.9.7).\\n- Various alignment corrections and bug fixes.\\nv1.9.7\\nList of changes:\\n1. Improved download and unzip commands.\\n    - Library zzip has been migrated to minizip for improved compatibility (as well as z64 support).\\n    - Tested with near 4 GB downloads (FAT32 limit) as well as files within zips.\\n        - Also tested with zips containing thousands of files.\\n2. Buffer calibrations for download, unzip, copy, and hex functions.\\n    - Calibrations have been set for nx-ovlloader and nx-ovlloader+ based upon available heap memory.\\n    - nx-ovlloader:\\n        - Download:- 128 KB read, 32 KB write\\n        - Unzip:- 128 KB read, 32 KB write\\n        - Copy:- 64 KB write\\n        - Hex:- 64 KB write\\n    - nx-ovlloader+:\\n        - Download:- 256 KB read, 128 KB write\\n        - Unzip:- 256 KB read, 128 KB write\\n        - Copy:- 256 KB write\\n        - Hex:- 256 KB write\\n    - The result is faster downloads / unzips and less memory issues.\\n        - Optimizations in this revision have lead to more heap memory available overall.\\n3. The selection overlay (sourced commands) has been optimized.\\n    -  Improved memory management for usage with nx-ovlloader (base loader).\\n        - Base loader will now only draw 250 list items to prevent crashes.\\n            - Side-note:- Keep in mind that if you have more than 250 items on the page, you will not be seeing everything. \\n            - nx-ovlloader+ however has this draw limit uncapped.\\n4. Library migration for jansson to cJSON.\\n    - cJSON compiles smaller and should be faster for the use cases within Ultrahand.\\n5. Now compiled without fstream (NO_FSTREAM directive), utilizing stdio.h instead.\\n    - This should be faster and help keep compilation size smaller.\\n6. Optimizations and fixes to various rendering methods.\\n    - The result is very slightly faster rendering than v1.9.6 with less potential issues.\\n7. Across the board optimizations to all libultra methods.\\n    - Improved ini, hex, path, and json functions.\\n    - Bug fixes for NO_FSTREAM directive.\\n8. Slight cleanup of lingering visual annoyances within the List class.\\n    - This fixes the menu not returning all the way to the top after scrolling.\\n    - Fix for menu auto jumping to top / bottom when pressing into a table at the very bottom instead of scrolling to the end.\\n    - Slightly improved table scrolling.\\n    - Removal of unnecessary internal methods.\\n    - Memory leak bug fix for rapid page swaps (faster than it can draw).\\n9. Bottom touch regions have been properly aligned based upon the text.\\n    - This should keep the touch regions clean and uniform regardless of language changes.\\n10. New flag option for disabling the auto update of nx-ovlloader/nx-ovlloader+ during the software update command.\\n    - To use this, add a blank file (no extension) named DISABLE_UPDATES into /config/ultrahand/expansion/.\\n    - Side-note:- Be cautious of using this, because once the flag has been added, Ultrahand will not be updating nx-ovlloader.\\n11. For interpreter in progress with downloads / unzips / large copies, the bottom menu bar will now display Hide and Cancel with proper touch integration.\\n12. Cleanup of unique and shared pointers in main.cpp to now purely utilize raw pointers instead.\\n13. The glyph cache will now be cleared automatically when you enter Ultrahand packages as well as the selection overlay.\\n    - This prevents the glyph cache from getting too large after entering tons of pages. (potential memory leak)\\n14. Selection overlay for base loader (nx-ovlloader) now has a max length cap of 250 to prevent memory overloads.\\n    - Be cautious, this means that if there are more than 250 items to process, some will be missing.\\n    - nx-ovlloader+ is still set to have an unlimited cap.\\n15. The Script Overlay now displays the package forwarder commands.\\n16. New language variable for abbreviated Overlays, for drawing on the bottom touch region.\\n    - This will be helpful for languages with large translations of this word.\\n17. Removal of all .reserve declarations throughout the project.\\n    - From extensive testing, it appears that memory reservations have been contributing to heap overload and memory leaks.\\n18. Revert of all __builtin_ memory related methods back to their std counterpart.\\n    - For the use cases within the project, the builtin appears to be less ideal since in many circumstances size is not determined during compilation.\\n19. Bug fix for nx-ovlloader+ not auto applying upon the first click (with no expansion zips initially installed).\\n20. Bug fix for favoriting / starring overlays not properly utilizing jump menu navigation.\\n21. Various alignment corrections and bug fixes.\\n\\nv1.9.6\\nList of changes:\\n1. New commands set-json-val/set-json-value and set-json-key (similar to set-ini-val and set-ini-key).\\n    - set-json-val <JSON_PATH> <JSON_KEY> <JSON_VALUE>.\\n        - This will set a value in a json according to a key.\\n        - If the json does not exist, it will be auto-created.\\n    - set-json-key <JSON_PATH> <JSON_KEY> <NEW_JSON_KEY>.\\n        - This changes the name of a key in a json\\n        - Will do nothing of the json does not exist.\\n2. Cleanup of all lingering visual glitches during menu navigation.\\n    - No more cursor flicker as pages transition.\\n    - Proper isolation / cleanup of jumpToItem execution.\\n    - The Language Menu- will now also return to the last selected item after a language change (with translations properly applied).\\n3. Updating Ultrahand from the Software Update page will now also update the version label stored in the HBAppStore's info.json.\\n    - This will prevent \"new update\" flags from appearing on the HBAppStore after updating Ultrahand from within itself.\\n        - Side-note:- If you don't see the version label on the update command footer before clicking it, the version label will not be updated.\\n            - If HBAppStore does not have the latest version, the store will still say that there is an update available.\\n4. Various alignment corrections (tables, scrollbar, list height corrections, internal List corrections, etc).\\n5. Various scrolling related fixes and improvements.\\n6. Various bug fixes and code optimizations.\\n\\nv1.9.5\\nList of changes:\\n1. Forward list caching has been properly implemented.\\n    - This allows jumpToItem to seamlessly transition during forward navigation (like in v1.9.3, but with no memory leaks).\\n2. Refresh commands with jumpToItem are now moved to refresh-to.\\n    - Called refresh-to <ITEM_NAME> [ITEM_VALUE] [EXACT_MATCH].\\n    - Exact match is an optional true/false value, set to true by default.\\n        - When false, it will check if the value / versions are contained within the strings rather than an exact match.\\n3. Various fixes to scrolling, touch scrolling, as well as table scrolling.\\n4. Fixes to download commands using a completion timeout (cancelling downloads early).\\n    - This completion timeout was added by mistake and could make downloads of large files fail.\\n5. New language Ukrainian has been added.\\n6. Additional key combos have been added to the combo list.\\n7. Table wrapping alignments have been corrected.\\n8. Various bug fixes and corrections.\\n\\nv1.9.4\\nStability Update\\n\\nList of changes:\\n1. Several critical memory leaks have been properly addressed.\\n    - Memory leaks can cause crashes when the heap gets overloaded.\\n        - This was especially noticeable with extremely long menus or long chains of commands (like download and unzip).\\n    - The prior frame caching implementation needed to be reworked / revised.\\n        - Potential broken / dangling pointers not properly being managed / cleared.\\n        - Backwards caching works fine, but forward caching of prior frames with jumpToItem needs to be revised in the next release to prevent the menu from briefly flickering into view.\\n    - Directory path caching has been completely removed (an unnecessary old implementation).\\n    - Various tweaks to libultra functions for improved reliability.\\n2. Implementation of a Font Manager class in tsl::gfx with a universal glyph cache for better memory management across drawString and calculateStringWidth methods.\\n    - All drawString methods and have been reconsolidated.\\n    - Fixes for alternative fonts were also implemented.\\n3. Complete rework of the prior scrolling implementation for smoother scrolling navigation.\\n    - Table scrolling for subsequent tables has been fixed (was not working properly in v1.9.3).\\n    - Table scrolling is also a lot smoother than before, with proper velocity interpolation.\\n4. (NEW) Dropdown commands (normally empty command blocks) can now be written with ;mini=true for making mini dropdown menus command forwarders.\\n5. Various alignment corrections, selection text color corrections, method optimizations and bug fixes.\\n\\nQuick Update:\\n- Ini placeholder bug fix.\\n    - Certain ini placeholders were not being properly handled within the source replacement functions.\\n    - This likely affected Reboot To for certain entry names in hekate_ipl.ini.\\n\\nv1.9.3\\nList of changes:\\n1. Menu navigation has been significantly cleaned up utilizing the new jump to item implementations.\\n    - Returning to the exact overlay entry you launched on the menu (on both the Overlays and Hidden Overlays pages).\\n    - Auto navigation to the checkmark on dropdown selections.\\n    - Page caching for smoother page to page transitions.\\n    - Left to right page swaps now have seamless transitions.\\n2. New Show Hidden toggle in Settings > UI Settings > Miscellaneous > Menu Items.\\n    - This will hide your hidden tabs on the Overlays and Packages pages.\\n    - Hidden overlays with Show Hidden set to off will also have their launch combos blacklisted.\\n    - This should be useful for giving your device to a kid to play without having them mess-up something critical.\\n3. Numerous across the board code optimizations.\\n    - Slightly faster rendering than v1.9.2.\\n4. Tables will now only poll new values when placeholders are present.\\n5. Complete cleanup of alignments (including table alignments).\\n6. Complete cleanup/rewrite of the List class in libtesla for seamless menu navigation.\\n7. Various touch scrolling bug fixes (especially for touch scrolling on tables, then resuming with controller input).\\n8. Jump menu navigation can now be used in packages (expansion of refresh command).\\n    - refresh <ITEM_NAME> [ITEM_VALUE] will auto-return the cursor to the item that fits the match.\\n    - ITEM_VALUE is optional and does not have to be defined.\\n    - ITEM_NAME is only optional with a blank string as its value, i.e. ''.\\n9. Numerous bug fixes and corrections.\\n\\nv1.9.2\\n\\nList of changes:\\n\\nRestoring of debug logging.\\nThis caused issues in rare test cases, using the IS_LAUNCHER_DIRECTIVE set to 0 (off).\\nDebug logging needs to be consolidated more (later).\\nOpacity bug fix.\\nThis caused wallpapers to hit opacity before the rest of the items, making screenshots look weird. All fixed now.\\nJump menu navigation from clicking up at the top of the list bug fix.\\nThis caused multiple \"up\" clicks to get stuck on the last item on the list initially for the second up click. Also fixed.\\nSlight refinement to the up / down jump menu navigation.\\nThreshold for successive clicks has been set from 150ms to 100ms for smoother navigation.\\n\\nv1.9.1\\nList of changes:\\n1. Significant rendering improvements in libultrahand / libtesla (again 🙂).\\n    - Faster string rendering (with safeguards) as well as rendering of other objects.\\n    - Faster glyph lookup (for drawing strings).\\n    - Safe optimizations to critical rendering components (considerable improvements).\\n    - 60fps now works on 918 MHz CPU with wallpapers.\\n    - 60fps also works with 714 MHz CPU without wallpapers.\\n        - 612 Mhz CPU without wallpapers is now very close to 60fps with it rendering 60fps on certain menus.\\n2. Bug fixes for left to right scrolling text (long ListItem text) not returning to its original position before restarting.\\n3. Rewrite of the List class in libtesla to properly allow jump menu navigation.\\n    - When at the top of the menu and up is pressed, the cursor will now automatically go to the bottom most item.\\n    - When at the bottom of the menu and down is pressed, the cursor will now automatically go back to the top.\\n    - When L is pressed, the cursor will jump to the top of the menu.\\n    - When R is pressed, the cursor will jump to the bottom of the menu. \\n        - All jump menu implementations works on menus with ListItems and tables, or even just tables.\\n    - Complete rewrite of the table scrolling implementation for smoother scrolling and less potential issues.\\n4. Fixes to table drawing implementations.\\n    - All tables are now ;scrollable=true by default with proper scrolling implemented.\\n        - This property will eventually be removed, as well as the other scrollable properties.\\n5. Download commands now have a 10s timeout.\\n6. Software Update now removes the version label if it cannot pull the latest version details from GitHub.\\n    - This will prevent people thinking an older version of the overlay is the latest.\\n7. Slight cleanup of debug logging.\\n8. Beta for nx-ovlloader+ v1.1.1: https://github.com/ppkantorski/nx-ovlloader/releases/tag/v1.1.1 is now live (not linked to Update for now for testing).\\n\\n What's Changed\\n Tweak for dist target by @impeeza in https://github.com/ppkantorski/Ultrahand-Overlay/pull/232\\n\\n1.9.0\\nTitle ID polling bug fixes in libultrahand (cleanup of the foreground fix implementation).\\n- Before it was using old / outdated service calls for pulling the title ID.\\n- This issue appears to have caused crashes on certain switch environments according to users.\\nVarious code optimizations in libultrahand.\\n- Rendering is slightly faster now than v1.8.9.\\n- Removal of chrono for libnx alternatives.\\nnx-ovlloader/nx-ovlloader+ have been re-compiled",
    "assets": [
        {
            "url": "https://github.com/ppkantorski/Ultrahand-Overlay/releases/download/v1.9.10/lang.zip",
            "type": "zip",
            "zip": [
                {
                    "path": "/**/*",
                    "dest": "/",
                    "type": "update"
                }
            ]
        },
        {
            "url": "https://github.com/ppkantorski/Ultrahand-Overlay/releases/download/v1.9.10/ovlmenu.ovl",
            "dest": "/switch/.overlays/ovlmenu.ovl",
            "type": "update"
        },
        {
            "type": "icon",
            "url": "icon.png"
        },
        {
            "type": "banner",
            "url": "screen.png"
        },
        {
            "type": "screenshot",
            "url": "screen1.png"
        }
    ]
}