{
    "package": "MissionControl",
    "info": {
        "title": "MissionControl",
        "author": "ndeadly",
        "category": "tool",
        "version": "0.13.5",
        "url": "https://github.com/ndeadly/MissionControl/releases",
        "license": "GPLv2",
        "description": "Use controllers from other consoles",
        "details": "Use controllers from other consoles natively on your Nintendo Switch via Bluetooth. No dongles or other external hardware neccessary.\\n\\nNotice: After installing this package, reboot your console to activate the module!\\n\\nFeatures\\n\\nSupports all Switch firmware versions.\\nConnect up to 8 non-switch Bluetooth controllers simultaneously without any additional hardware.\\nMake use of native HOS menus for controller pairing, button remapping (firmware 10.0.0+) etc.\\nSupport for rumble and motion controls (compatible controllers only)\\nLow input lag.\\nFile-based virtual controller memory allowing for data such as analog stick calibration to be stored and retrieved.\\nUnlocks such as button remapping and stick calibration for third-party Licensed Pro Controllers.\\nEnables use of JoyConDroid without root access.\\nSpoofing of host Bluetooth adapter name and address.\\nmc.mitm module adds extension IPC commands that can be used to interact with the bluetooth process without interfering with the state of the system.\\nSupported Controllers\\n\\nCurrently, the following controllers are supported. If you have a third-party variant of one of the below, or a Bluetooth controller that isn't listed, consider submitting a controller request issue.\\n\\nNintendo Wii Remote + extensions (Nunchuck, Classic Controller, Classic Controller Pro, SNES Mini, TaTaCon (Taiko drum), MotionPlus)\\nNintendo Wii Balance Board (experimental)\\nNintendo WiiU Pro Controller\\nSony Dualshock3 (Playstation 3) Controller\\nSony DualShock4 (Playstation 4) Controller\\nSony Dualsense (Playstation 5) Controller\\nSony Dualsense Edge Controller\\nMicrosoft Xbox One S/X Controller (not to be confused with Series S/X controllers - these use Bluetooth LE, which isn't currently supported)*\\nMicrosoft Xbox Elite Wireless Controller Series 2\\nNVidia Shield Controller (2017 Model)\\nOuya Controller\\nGamestick Controller\\nGembox Controller\\niCade Controller\\nIpega Controllers (7197, 9017s, 9023, 9055, 9062S, 9076, 9078, 9087, 9096 confirmed working. Others may also work)\\ng910 Wireless Bluetooth Controller\\nXiaomi Mi Controller\\nSteelseries Free\\nSteelseries Nimbus\\nSteelseries Stratus Duo\\nSteelseries Stratus XL\\nGameSir G3s\\nGameSir G4s\\nGameSir T1s\\nGameSir T2a\\nHori Onyx\\n8BitDo SN30 Pro Xbox Cloud Gaming Edition\\n8BitDo Ultimate 2.4G Wireless Controller\\n8BitDo ZERO (Most other 8BitDo controllers have a Switch mode available. May require firmware update)\\nPowerA Moga Hero\\nPowerA Moga Pro\\nPowerA Moga Pro 2\\nMad-Catz C.T.R.L.R\\nMad-Catz L.Y.N.X 3\\nRazer Raiju Tournament\\nRazer Raiju Ultimate\\nRazer Serval\\nMocute 050\\nMocute 053\\nGen Game S3\\nAtGames Legends Pinball Controller + Arcade Control Panel\\nHyperkin Scout\\nBetop 2585N2\\nAtari Wireless Modern Controller\\nSCUF Vantage 2\\n*Not all Xbox One wireless controllers support Bluetooth. Older variants use a proprietary 2.4Ghz protocol and cannot be used with the Switch. See here for information on identifying the Bluetooth variant.\\n\\nRequirements\\n\\nHackable Nintendo Switch running an up-to-date version of Atmosph√®re custom firmware. Other custom firmwares are not supported.\\nCompatible Bluetooth controller"
    },
    "changelog": "v0.13.5\\n<p align=\"left\">\\n<img alt=\"GitHub Releases\" src=\"https://img.shields.io/github/downloads/ndeadly/MissionControl/v0.13.5/total\">\\n<a href=\"https://discord.gg/gegfNZ5Ucz\"><img alt=\"Discord Server\" src=\"https://discordapp.com/api/guilds/905069757361971303/widget.png?style=shield\"/></a>\\n<a href=\"https://ko-fi.com/J3J01BZZ6\"><img alt=\"Support me on Ko-fi\" src=\"https://img.shields.io/badge/Support%20me%20on%20Ko--fi-72A5F2?logo=ko-fi&logoColor=FF6433\"/></a>\\n</p>\\n\\nThis release adds support for firmware 20.4.0, and a new configuration option for disabling support for pairing Dualshock 3 controllers via USB.\\n\\nThe new configuration option dualshock3_enable_usb_pairing allows for disabling USB pairing of Dualshock 3 controllers for compatibility with sys-con. When both sysmodules are running, Dualshock 3 controllers can't be used via USB due to conflicting interface filters for detecting the controller. Disabling this option allows sys-con to detect the controller, at the expense of being able to pair them for wireless use.\\n\\n_Note: Dualshock 3 controllers can still be used wirelessly with this option disabled, they just must be paired prior to disabling it_\\n\\nNew users landing on this release page should first check out the readme on the main project page: https://github.com/ndeadly/MissionControlreadme for the official project documentation. There you can find installation and usage instructions along with an FAQ section that will answer most of your questions.\\n\\n Changelog\\n- Added support for firmware 20.4.0\\n- Added option to config .ini for disabling dualshock 3 usb pairing\\n\\nSupport the dev on Ko-fi: https://ko-fi.com/J3J01BZZ6\\nMissionControl Discord server: https://discord.gg/gegfNZ5Ucz\\nNew users landing on this release page should first check out the readme on the main project page: https://github.com/ndeadly/MissionControlreadme for the official project documentation. There you can find installation and usage instructions along with an FAQ section that will answer most of your questions.\\n\\nv0.13.4\\n- Added support for firmware 20.3.0\\n\\nv0.13.3\\nThis release adds support for firmware 20.2.0 and fixes an issue with the bluetooth exefs patches on 20.x.x firmwares. See below for the full changelog.\\n\\nChangelog:\\n- Added support for firmware 20.2.0\\n- Fixed incorrect offsets in exefs patches for 20.x.x affecting xbox elite v2 controller pairing\\n\\n0.13.2\\nThis release adds full support for firmware 20.1.0, and whitelists a new official controller type introduced in the new firmware.\\n- Added support for firmware 20.1.0\\n- Added support for new Lic3 Pro Controller type\\n\\n0.13.1\\nJust a quick bugfix release to address a few oversights in the original 0.13.0 release. There was a regression due to changing the reported controller type to Licensed Pro Controller, which doesn't have support for rumble or reporting battery levels. The hid patches have been updated to add the missing flags and restore the functionality for controllers emulated through Mission Control. See below for the full changelog.\\n\\nNote: setting new flags for the Licensed Pro Controller type may also activate missing features on actual licensed 3rd party Pro Controllers (e.g. battery level reporting) if the controller happens to implement them. Don't expect any miracles (rumble isn't going to start working on a controller without motors). Please also let me know if these patches have any adverse effects\\n\\n0.13.0\\nThis release brings full support for firmware 20.0.0 and 20.0.1, an implementation of a new quaternion based motion format found in newer controller firmwares (thanks @Banz99) along with various other bugfixes and improvements.\\n\\nFull changelog:\\nAdded full support for 20.0.X firmwares\\nAdded implementation of new quaternion based motion data format.\\nAdded exefs patches for hid to modify supported feature flags for third-party Licensed Pro Controllers. Button remapping, analog stick and motion calibration are now enabled.\\nChanged emulated controller type to Licensed Pro Controller. This prevents the console from attempting to read NFC data from emulated controllers which was causing freezing and screeching audio in some games.\\nSysmodule no longer initialises btm/btm:sys services on startup in order to leave sessions available to other homebrew applications.\\nAdded a mechanism via bluetooth exefs patches for implementing custom commands called via the WriteHidData2 IPC function. This allows exposing internal bluetooth stack functions.\\nAdded IPC commands to the mc service to expose calls for sending arbitrary HCI commands and calling the internal BSA_DmSetConfig function.\\nAdded a mechanism for external software making use of hid report event redirection to either consume redirected events or forward them back to the system.",
    "assets": [
        {
            "url": "https://github.com/ndeadly/MissionControl/releases/download/v0.13.5/MissionControl-0.13.5-master-0aca4ab2.zip",
            "type": "zip",
            "zip": [
                {
                    "path": "/**/*",
                    "dest": "/",
                    "type": "update"
                }
            ]
        },
        {
            "type": "icon",
            "url": "icon.png"
        }
    ]
}